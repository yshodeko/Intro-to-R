#View(character_removal)
myxe <- numeric(length(character_removal[,1]))
#myxe
for(i in seq(myxe)){
myxe[i] <- mean(as.numeric(exercise[i,]))
}
myxe[1:8]
character_removal <- exercise[,-1]
#View(character_removal)
myxe <- numeric(length(character_removal[,1]))
#myxe
for(i in seq(myxe)){
myxe[i] <- mean(as.numeric(exercise[i,]))
}
as.numeric(myxe[1:8])
character_removal <- exercise[,-1]
#View(character_removal)
myxe <- numeric(length(character_removal[,1]))
#myxe
for(i in seq(myxe)){
myxe[i] <- mean(as.numeric(character_removal[i,]))
}
myxe[1:8]
mygene <- c(exercise[,-2:-19], myxe)
mygene
View(mygene)
myxe
myxe[1:8]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
# Load required libraries
library(dplyr)
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
cat
cat
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
cat
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
cat
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
cat()
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
cat()
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
avearges
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
avearges
avearges[1:8]
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
avearges[1:8
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
avearges[1:8]
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
avearges[,]
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
cat()
cat[]
cat[,]
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
library(dplyr)
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
cat[,]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
exercise <- read.csv("GSE71562.CSV")
head(exercise)
View(exercise)
character_removal <- exercise[,-1]
#View(character_removal)
myxe <- numeric(length(character_removal[,1]))
#myxe
for(i in seq(myxe)){
myxe[i] <- mean(as.numeric(character_removal[i,]))
}
myxe[1:8]
myxe
mygene <- c(exercise[,-2:-19], myxe)
View(mygene)
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
exercise <- read.csv("GSE71562.CSV")
head(exercise)
View(exercise)
character_removal <- exercise[,-1]
#View(character_removal)
myxe <- numeric(length(character_removal[,1]))
#myxe
for(i in seq(myxe)){
myxe[i] <- mean(as.numeric(character_removal[i,]))
}
myxe[1:8]
myxe
mygene <- c(exercise[,-2:-19], myxe)
View(mygene)
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
cat[,]
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Assuming your data is stored in a data frame named exercise
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Variables with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Variable:", name, "\tAverage:", avg_values[name], "\n")
}
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (i in above_threshold) {
cat("Gene number:", i, "\tName:", names_above_threshold[i], "\tAverage:", avg_values[names_above_threshold[i]], "\n")
}
# Load required libraries
library(dplyr)
# Assuming your data is stored in a data frame named my_data
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values[above_threshold])
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (i in above_threshold) {
cat("Gene number:", i, "\tName:", names_above_threshold[i], "\tAverage:", avg_values[names_above_threshold[i]], "\n")
}
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- names(avg_values)[above_threshold]
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (i in above_threshold) {
cat("Gene number:", i, "\tName:", names_above_threshold[i], "\tAverage:", avg_values[names_above_threshold[i]], "\n")
}
# Problem 1: Calculate average of 18 numeric variables and find the name of the highest average
averages <- exercise %>%
summarise(across(where(is.numeric), mean, na.rm = TRUE))
max_avg <- which.max(averages)
name_of_max_avg <- names(averages)[max_avg]
# Print the result
cat("Problem 1:\n")
cat("Variable with the highest average:", name_of_max_avg, "\n")
# Problem 2: Print variable names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(where(is.numeric)),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
names_above_threshold <- row.names(exercise)[above_threshold]
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (name in names_above_threshold) {
cat("Gene name:", name, "\tAverage:", avg_values[name], "\n")
# Problem 2: Print gene names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(-Gene),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
genes_above_threshold <- exercise$Gene[above_threshold]
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (gene in genes_above_threshold) {
cat("Gene name:", gene, "\tAverage:", avg_values[match(gene, exercise$Gene)], "\n")
}
# Load required libraries
library(dplyr)
# Create a sample data frame
exercise <- data.frame(
Gene = c("aaeA", "aaeB", "aaeR", "aaeX", "aas", "aat"),
E14R012a01 = c(100, 116, 316, 77, 407, 243),
E14R012a02 = c(56, 47, 253, 53, 286, 169),
E14R012a03 = c(44, 54, 249, 53, 283, 163),
E14R012a04 = c(94, 80, 396, 86, 375, 252),
E14R012a05 = c(32, 37, 181, 46, 188, 104)
)
# Problem 2: Print gene names and numbers that are 2 standard deviations above the averages
avg_values <- rowMeans(exercise %>%
select(-Gene),
na.rm = TRUE)
std_dev <- sd(avg_values, na.rm = TRUE)
threshold <- mean(avg_values, na.rm = TRUE) + 2 * std_dev
above_threshold <- which(avg_values > threshold)
genes_above_threshold <- exercise$Gene[above_threshold]
# Print the result
cat("\nProblem 2:\n")
cat("Genes with averages above 2 standard deviations:\n")
for (gene in genes_above_threshold) {
cat("Gene name:", gene, "\tAverage:", avg_values[match(gene, exercise$Gene)], "\n")
}
